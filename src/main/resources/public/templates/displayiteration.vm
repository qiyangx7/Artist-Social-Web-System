#set( $title = "Display Iteration" )
#parse("public/templates/top.vm")

<div>

    <!-- Include stylesheet -->
    <link href="https://cdn.quilljs.com/1.3.6/quill.snow.css" rel="stylesheet">

    <!-- Create the editor container -->
    <div id="editor">
    </div>

    <!-- Include the Quill library -->
    <script src="https://cdn.quilljs.com/1.3.6/quill.js"></script>

    <!-- Initialize Quill editor -->
    <script>
        var options = {
            readOnly: true,
            theme: 'bubble'
        };
        var quill = new Quill('#editor', options);

        var content = $workContent;
        content = JSON.stringify(content);
        quill.setContents(JSON.parse(content));

    </script>

    #if($prevItExists)
    <script type = "text/javascript">
        function viewPreviousIteration()
        {
            window.location = '/works/$workId/$currentWorkUpdate.prevItId';
        }
    </script>
    <button type ="button" onclick="viewPreviousIteration()">
        View Previous Iteration
    </button>
    #end

</div>

<br />

<div style = "width: 70%; margin: auto;">

<p>Iteration ID: $currentWorkUpdate.id </p>

<div id="commentEditor">
    <p>Leave a comment!</p>
    <p><br></p>
</div>

<!-- Initialize Quill editor -->
<script>
    var commentQuill = new Quill('#commentEditor', {
        theme: 'snow'
    });
</script>

<br />

<script>
    function addComment(quill, wuId, pid) {

        alert("Comment adding...")

        const hostname = window.location.href;
        var host = new URL(hostname).host;

        var content = JSON.stringify(quill.getContents());

        return fetch('https://' + host + '/addcomment?'
                + 'parentId=' + pid
                + '&workUpdateId=' + wuId
                + '&comment=' + content, {
                    method: 'POST',
                }
        ).then(res => window.location.reload());
    }
</script>
<input type="submit" value="Comment" id="submitComment" onclick="addComment(commentQuill, $currentWorkUpdate.id, 0)"/>

<br />

<div>
    #foreach($comment in $comments)
        <p style = "font-size: 80%;">Comment ID : $comment.id |

        #foreach($user in $users)
            #if($user.id == $comment.userId)
                from $user.username
            #end
        #end

        #if($comment.parentId != 0)
            in response to $comment.parentId
        #end
        </p>

        <div id="temp">
        </div>
        <div id="tempReplyBox" >
        </div>
        <input type="submit" value="Reply" id="tempReply"/>
        <script>
            var curDiv = document.getElementById("temp");
            curDiv.setAttribute("id", "comment"+$comment.id);
            var curReply = document.getElementById("tempReply");
            curReply.setAttribute("id", "reply"+$comment.id);
            var curReplyBox = document.getElementById("tempReplyBox");
            curReplyBox.setAttribute("id", "replyBox"+$comment.id);
            var commentDisplayQuill = new Quill('#comment'+$comment.id, {
                readOnly: true,
                theme: 'bubble'
            });
            var content = ($comment.comment);
            content = JSON.stringify(content);
            commentDisplayQuill.setContents(JSON.parse(content));

            document.getElementById("reply" + $comment.id).addEventListener('click', addCommentBox, { once: true });

            function addCommentBox(){

                alert("Add Comment Box invoked!")

                var replyQuill = new Quill('#replyBox'+$comment.id, {
                    theme: 'snow',
                });

                document.getElementById("reply" + $comment.id).addEventListener('click', () => {submitReply($comment.id)});
            }

        </script>
    #end
</div>

</div>

<script>
    function submitReply(id) {
        var container = document.querySelector('#replyBox'+id);
        var commentQuill = Quill.find(container);
        if (commentQuill === null) {
            alert("We have a problem!")
        }
        else {
            addComment(commentQuill, $currentWorkUpdate.id, id);
        }
    }
</script>

#parse("public/templates/bottom.vm")